#include <stdio.h>
#include <stdlib.h>
#include <string.h>
     
int j = -1;
     
void push(char **stack, char *element){ //добавляет элемент в массив со стеком
    strcpy(stack[++j],element);
}

void pop(char **stack){ //"удаляет последний элемент стека"
    j--;
}

int vacuum(){ //определяет, пустой ли стек по индексу последнего элемента
    if(j==-1) return 0;
    else return 1;
}
     
int main(){
    char **stack = (char**)malloc(100 *sizeof(char*)); //выделяем память под массив указателей, каждый из которых будет указывать на строку тега, который мы запишем в стек
    for (int i = 0; i<100; i++)
        stack[i] = (char*)malloc(20 *sizeof(char)); //выделяем память для каждого указателя из стэка 
    char c;
    char *tag=(char*)malloc(20*sizeof(char)); //указатель на текущий тэг 
    while (c!='\n'){ //пока не закончилась текущая строка
        scanf("%c",&c); //вводим символ
        if (c=='<'){ //если этот символ равен символу, открывающему тег
            scanf("%20[^>]с",tag); //записываем следующие символы, пока не встретим закрывающий символ, в строку tag
            if (strcmp(tag,"br") && strcmp(tag,"hr")){ //если тег не равен тегу <br> или <hr>
                if (tag[0] != '/') push(stack,tag);  //если тег не закрывающий, записываем его в стек, прибавляем к j единицу          
                else{
                    if (vacuum() == 0){//если стек пустой, след-но последний записанный тег закрывающий, то строка неверная, выходим из программы
                        printf("wrong");
                        return 0;
                    }
                    else{ //если тег закрывающий, но стек не пустой
                        if (strcmp(stack[j],tag+1) != 0){ //если последний элемент стека и тег, не считая одного элемента "/", не идентичны, закрываем программу
                            printf("wrong");
                            return 0;
                        }
                        else pop(stack);  //если идентичны, "удаляем" последний элемент
                    }
                }
            }
        }                                       
    }
if (vacuum() == 0) //если стек пустой (не осталось открывающих тегов)
printf("correct");
else //если стек не пустой
printf("wrong");
}

